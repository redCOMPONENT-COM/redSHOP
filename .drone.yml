pipeline:
    00-cache:
        group: 00-setup
        image: redwebaps/redshop-cache:dev
        pull: true
        commands:
        # redShop Composer cache
        - mv /opt/cache/redSHOP/vendor .
        - touch tests/.cache.composer.tmp
        # redShop  npm cache
        - touch tests/.cache.npm.tmp
        - mv /opt/cache/redSHOP/node_modules .
        # Joomla CMS
        - mv /opt/cache/joomla-cms tests
        - touch tests/.cache.joomla-cms.tmp

    00-setup:
        group: 00-setup
        image: redwebaps/testbox-chromedriver:2.38
        # pull: true
        environment:
        - tests_user=admin
        - tests_suite=00-setup
        - tests_db=setup
        - php_server=php56
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-00-a-setup
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Composer setup
        - while [ ! -f tests/.cache.composer.tmp ]; do sleep 1; done          # Comment if not using composer cache
        - composer config -g github-oauth.github.com 6f8f19c330a0f899458e4b0670824deb8cdfe391
        # - composer install --prefer-dist                                    # Uncomment if not using composer cache
        # NPM setup
        - while [ ! -f tests/.cache.npm.tmp ]; do sleep 1; done               # Comment if not using npm cache
        - npm install gulp
        - cd libraries/redshop
        - composer install --prefer-dist
        - cd ../../
        - cp gulp-config.json.dist gulp-config.json
        - gulp release --skip-version
        # Codeception setup
        - cp tests/acceptance.suite.yml.dist.drone tests/acceptance.suite.yml
        # Test setup
        - while [ ! -f tests/.cache.joomla-cms.tmp ]; do sleep 1; done        # Comment if not using Joomla CMS cache
        # - vendor/bin/robo tests:site-preparation 0 0
        # Ownership for uid 82
        - chown -R www-data:www-data .
        # Creating first clone for tests setup
        - mkdir -p tests/$tests_suite/joomla-cms
        - rsync -a tests/joomla-cms/ tests/$tests_suite/joomla-cms
        # Creates the database (required because of the Codeception Db module)
        - mysql -u root -proot -h db -e "CREATE DATABASE $tests_db"
        - su www-data -c 'vendor/bin/robo tests:setup 0 0'

    00-setup-stages:
        group: tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=00-setup
        - tests_db=setup
        - php_server=php56
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-00-b-setup-stages
        commands:
        # Final DB dump with full Joomla/extension setup
        - rsync -a --delete tests/$tests_suite/joomla-cms/ tests/joomla-cms
        - sed -i "s/db = '$tests_db'/db = 'tests_db'/g" tests/joomla-cms/configuration.php
        - sed -i "s,$tests_suite/joomla-cms/,joomla-cms/,g" tests/joomla-cms/configuration.php
        - mysqldump -u root -proot -h db $tests_db > tests/dbdump.sql.tmp
        # Stages setup
        - sh tests/drone/setup-stages.sh "Mail"                 "01-Mail"

    01-Mail:
        group: tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=01-Mail
        - tests_db=Mail
        - php_server=php56
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-01-Mail
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/Communications/Mail 0 0'

    01-setup:
        group: 01-setup
        image: redwebaps/testbox-chromedriver:2.38
        # pull: true
        environment:
        - tests_user=admin
        - tests_suite=01-setup
        - tests_db=01_setup
        - php_server=php71
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-01-a-setup
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Composer setup
        - while [ ! -f tests/.cache.composer.tmp ]; do sleep 1; done          # Comment if not using composer cache
        - composer config -g github-oauth.github.com 6f8f19c330a0f899458e4b0670824deb8cdfe391
        # - composer install --prefer-dist                                    # Uncomment if not using composer cache
        # NPM setup
        - while [ ! -f tests/.cache.npm.tmp ]; do sleep 1; done               # Comment if not using npm cache
        - npm install gulp
        - cd libraries/redshop
        - composer install --prefer-dist
        - cd ../../
        - mv gulp-config.json.dist gulp-config.json
        - gulp release --skip-version
        # Codeception setup
        - cp tests/acceptance.suite.yml.dist.drone tests/acceptance.suite.yml
        # Test setup
        - while [ ! -f tests/.cache.joomla-cms.tmp ]; do sleep 1; done        # Comment if not using Joomla CMS cache
        # - vendor/bin/robo tests:site-preparation 0 0
        # Ownership for uid 82
        - chown -R www-data:www-data .
        # Creating first clone for tests setup
        - mkdir -p tests/$tests_suite/joomla-cms
        - rsync -a tests/joomla-cms/ tests/$tests_suite/joomla-cms
        # Creates the database (required because of the Codeception Db module)
        - mysql -u root -proot -h db -e "CREATE DATABASE $tests_db"
        - su www-data -c 'vendor/bin/robo tests:setup 0 0'

    01-setup-stages:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=01-setup
        - tests_db=01_setup
        - php_server=php71
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-01-b-setup-stages
        commands:
        # Final DB dump with full Joomla/extension setup
        - rsync -a --delete tests/$tests_suite/joomla-cms/ tests/joomla-cms
        - sed -i "s/db = '$tests_db'/db = 'tests_db'/g" tests/joomla-cms/configuration.php
        - sed -i "s,$tests_suite/joomla-cms/,joomla-cms/,g" tests/joomla-cms/configuration.php
        - mysqldump -u root -proot -h db $tests_db > tests/dbdump.sql.tmp
        # Stages setup
        - sh tests/drone/setup-stages.sh "01_Mail"                 "02-Mail"

    02-Mail:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=02-Mail
        - tests_db=01_Mail
        - php_server=php71
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-02-Mail
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/Communications/Mail 0 0'

    slack:
        image: plugins/slack
        webhook: https://hooks.slack.com/services/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
        channel: redshop-builds
        when:
            status: [ success, failure ]
        template: >
            {{#success build.status}}
              {{repo.name}} PR #{{build.pull}} succeeded in {{since build.started}}. Good job {{build.author}}!  Here is the build log: {{build.link}}.  Link to the PR: https://github.com/{{repo.owner}}/{{repo.name}}/pull/{{build.pull}}
            {{else}}
              {{repo.name}} PR #{{build.pull}} failed in {{since build.started}}. Fix me please {{build.author}}!  Here is the build log: {{build.link}}.  Link to the PR: https://github.com/{{repo.owner}}/{{repo.name}}/pull/{{build.pull}}
            {{/success}}

    error-report:
        image: redwebaps/testbox-chromedriver:2.38
        commands:
        - if [ -z "${CI_PULL_REQUEST}" ]; then export CI_PULL_REQUEST=1; fi
        - vendor/bin/robo send:build-report-error-slack redcomponent 365447364384436 Q94UM5kjZkZIrau8MIL93m0dN6U "$CI_REPO" "$CI_PULL_REQUEST" "https://hooks.slack.com/services/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" "#redshop-builds" "$CI_BUILD_URL"
        when:
            status: [ failure ]

services:
    db:
        image: mysql/mysql-server:5.7
        # pull: true
        environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_ROOT_HOST=%

    php56:
        image: redwebaps/php-apache:5.6
        pull: true
        environment:
        - WEB_DOCUMENT_ROOT=/drone/src/github.com/${DRONE_REPO}
        - JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK=1
    php71:
        image: redwebaps/php-apache:7.1
        pull: true
        environment:
        - WEB_DOCUMENT_ROOT=/drone/src/github.com/${DRONE_REPO}
        - JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK=1
branches:
    exclude: [ crowdin ]

