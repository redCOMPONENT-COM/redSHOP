pipeline:
    00-cache:
        group: 00-setup
        image: redwebaps/redshop-cache:dev
        # pull: true
        commands:
        # redShop Composer cache
        - mv /opt/cache/redSHOP/vendor .
        - touch tests/.cache.composer.tmp
        # redShop  npm cache
        - touch tests/.cache.npm.tmp
        - mv /opt/cache/redSHOP/node_modules .
        # Joomla CMS
        - mv /opt/cache/joomla-cms tests
        - touch tests/.cache.joomla-cms.tmp

    00-setup:
        group: 00-setup
        image: redwebaps/testbox-chromedriver:2.38
        # pull: true
        environment:
        - tests_user=admin
        - tests_suite=00-setup
        - tests_db=setup
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-00-a-setup
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Composer setup
        - while [ ! -f tests/.cache.composer.tmp ]; do sleep 1; done          # Comment if not using composer cache
        - composer config -g github-oauth.github.com 6f8f19c330a0f899458e4b0670824deb8cdfe391
        # - composer install --prefer-dist                                    # Uncomment if not using composer cache
        # NPM setup
        - while [ ! -f tests/.cache.npm.tmp ]; do sleep 1; done               # Comment if not using npm cache
        - npm install gulp
        - cd libraries/redshop
        - composer install --prefer-dist
        - cd ../../

        # - cd ../../plugins/redshop_pdf/tcpdf/helper
        # - composer install --prefer-dist

        # - cd ../../../..
        # - composer install --prefer-dist
        # Uncomment if not using npm cache
        # redShop installer release
        # - while [ ! -f tests/.cache.composer.library.tmp ]; do sleep 1; done  # Comment if not using composer cache for libraries
        - mv gulp-config.json.dist gulp-config.json
        - gulp release --skip-version
        # Codeception setup
        - cp tests/acceptance.suite.yml.dist.drone tests/acceptance.suite.yml
        # Test setup
        - while [ ! -f tests/.cache.joomla-cms.tmp ]; do sleep 1; done        # Comment if not using Joomla CMS cache
        # - vendor/bin/robo tests:site-preparation 0 0
        # Ownership for uid 82
        - chown -R www-data:www-data .
        # Creating first clone for tests setup
        - mkdir -p tests/$tests_suite/joomla-cms
        - rsync -a tests/joomla-cms/ tests/$tests_suite/joomla-cms
        # Creates the database (required because of the Codeception Db module)
        - mysql -u root -proot -h db -e "CREATE DATABASE $tests_db"
        - su www-data -c 'vendor/bin/robo tests:setup 0 0'

    00-01-setup-stages:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=00-setup
        - tests_db=setup
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-00-b-setup-stages
        commands:
        # Final DB dump with full Joomla/extension setup
        - rsync -a --delete tests/$tests_suite/joomla-cms/ tests/joomla-cms
        - sed -i "s/db = '$tests_db'/db = 'tests_db'/g" tests/joomla-cms/configuration.php
        - sed -i "s,$tests_suite/joomla-cms/,joomla-cms/,g" tests/joomla-cms/configuration.php
        - mysqldump -u root -proot -h db $tests_db > tests/dbdump.sql.tmp
        # Stages setup
        - sh tests/drone/setup-stages.sh "Mail"                        "01-Mail"
        - sh tests/drone/setup-stages.sh "Configuration"               "02-Configuration"
        - sh tests/drone/setup-stages.sh "Country"                     "03-Country"
        - sh tests/drone/setup-stages.sh "Currency"                    "04-Currency"
        - sh tests/drone/setup-stages.sh "Custom_Field"                "05-Custom_Field"
        - sh tests/drone/setup-stages.sh "Field_Group"                 "06-Field_Group"
        - sh tests/drone/setup-stages.sh "State"                       "07-State"
        - sh tests/drone/setup-stages.sh "Template"                    "08-Template"
        - sh tests/drone/setup-stages.sh "Text"                        "09-Text"
        - sh tests/drone/setup-stages.sh "Discount"                    "10-Discount"
        - sh tests/drone/setup-stages.sh "Discount_Product"            "11-Discount_Product"
        - sh tests/drone/setup-stages.sh "Mass_Discount"               "12-Mass_Discount"
        - sh tests/drone/setup-stages.sh "Coupon"                      "13-Coupon"
        - sh tests/drone/setup-stages.sh "Giftcard"                    "14-Giftcard"
        - sh tests/drone/setup-stages.sh "Voucher"                     "15-Voucher"
        - sh tests/drone/setup-stages.sh "Category"                    "16-Category"
        # - sh tests/drone/setup-stages.sh "Orders"               "17-Order"
        - sh tests/drone/setup-stages.sh "Quotations"                  "18-Quotation"
        - sh tests/drone/setup-stages.sh "ProductNotForSaleOnFrontend" "19-ProductNotForSaleOnFrontend"
        - sh tests/drone/setup-stages.sh "Price_Product"               "20-Price_Product"
        - sh tests/drone/setup-stages.sh "Supplier"                    "21-Supplier"
        - sh tests/drone/setup-stages.sh "Tax_Group"                   "22-Tax_Group"

    01-Mail:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=01-Mail
        - tests_db=Mail
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-01-Mail
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Communications/Mail 0 0'

    02-Configuration:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=02-Configuration
        - tests_db=Configuration
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-02-Configuration
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Configuration/ 0 0'

    03-Country:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=03-Country
        - tests_db=Country
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-03-Country
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Customizations/Country 0 0'

    04-Currency:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=04-Currency
        - tests_db=Currency
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-04-Currency
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Customizations/Currency 0 0'

    05-Custom_Field:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=05-Custom_Field
        - tests_db=Custom_Field
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-05-Custom_Field
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Customizations/Custom_Field 0 0'

    06-Field_Group:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=06-Field_Group
        - tests_db=Field_Group
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-06-Field_Group
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Customizations/Field_Group 0 0'

    07-State:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=07-State
        - tests_db=State
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-07-State
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Customizations/State 0 0'

    08-Template:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=08-Template
        - tests_db=Template
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-08-Template
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Customizations/Template 0 0'

    09-Text:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=09-Text
        - tests_db=Text
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-09-Text
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Customizations/Text 0 0'

    10-Discount:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=10-Discount
        - tests_db=Discount
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-10-Discount
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Discount_Groups/Discounts/Discount 0 0'

    11-Discount_Product:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=11-Discount_Product
        - tests_db=Discount_Product
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-11-Discount_Product
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Discount_Groups/Discounts/Discount_Product 0 0'

    12-Mass_Discount:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=12-Mass_Discount
        - tests_db=Mass_Discount
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-12-Mass_Discount
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Discount_Groups/Discounts/Mass_Discount 0 0'

    13-Coupon:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=13-Coupon
        - tests_db=Coupon
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-13-Coupon
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Discount_Groups/Rewards/Coupon 0 0'

    14-Giftcard:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=14-Giftcard
        - tests_db=Giftcard
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-14-Giftcard
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Discount_Groups/Rewards/Giftcard 0 0'

    15-Voucher:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=15-Voucher
        - tests_db=Voucher
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-15-Voucher
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Discount_Groups/Rewards/Voucher 0 0'

    16-Category:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=16-Category
        - tests_db=Category
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-16-Category
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Products/Category 0 0'

#    17-Order:
#        group: 01-tests
#        image: redwebaps/testbox-chromedriver:2.38
#        environment:
#        - tests_user=admin
#       - tests_suite=17-Order
#        - tests_db=Orders
#        - build_path=/drone/src/github.com/${DRONE_REPO}
#        - output_append=-17-Order
#        commands:
#        # Regular entry point
#        - /entrypoint.sh &
#        # Performs test after ensuring that the scenario has been fully set up
#        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
#        # Performs test
#        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Orders/Order 0 0'

    18-Quotation:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=18-Quotation
        - tests_db=Quotations
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-18-Quotation
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Orders/Quotation 0 0'

    19-ProductNotForSaleOnFrontend:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=19-ProductNotForSaleOnFrontend
        - tests_db=ProductNotForSaleOnFrontend
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-19-ProductNotForSaleOnFrontend
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/ProductNotForSaleOnFrontend 0 0'

    20-Price_Product:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=20-Price_Product
        - tests_db=Price_Product
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-20-Price_Product
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Products/Price_Product 0 0'

    21-Supplier:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=21-Supplier
        - tests_db=Supplier
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-21-Supplier
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Products/Supplier 0 0'

    22-Tax_Group:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=22-Tax_Group
        - tests_db=Tax_Group
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-22-Tax_Group
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Products/Tax_Group 0 0'

    00-02-setup-stages:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=00-setup
        - tests_db=setup
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-00-b-setup-stages
        commands:
        # Stages setup
        - sh tests/drone/setup-stages.sh "Tax_Rate"                     "23-Tax_Rate"
        - sh tests/drone/setup-stages.sh "Wrapper"                      "24-Wrapper"
        - sh tests/drone/setup-stages.sh "Shipping"                     "25-Shipping"
        - sh tests/drone/setup-stages.sh "Stockroom"                    "26-Stockroom"
        - sh tests/drone/setup-stages.sh "Stock_Image"                  "27-Stock_Image"
        - sh tests/drone/setup-stages.sh "User"                         "28-User"
        - sh tests/drone/setup-stages.sh "Shopper_Group"                "29-Shopper_Group"
        - sh tests/drone/setup-stages.sh "Checkout_Quantity"            "30-Checkout_Quantity"
        - sh tests/drone/setup-stages.sh "ProductManagement"            "31-ProductManagement"
        - sh tests/drone/setup-stages.sh "Compare_Products"             "32-Compare_Products"
        - sh tests/drone/setup-stages.sh "Manufacturer"                 "33-Manufacturer"
        - sh tests/drone/setup-stages.sh "VAT"                          "34-VAT"
        # - sh tests/drone/setup-stages.sh "Stockroom_Checkout"           "35-Stockroom_Checkout"
        - sh tests/drone/setup-stages.sh "Shopper_Groups_Checkout"      "36-Shopper_Groups_Checkout"
        # - sh tests/drone/setup-stages.sh "Products_FrontEnd"            "37-Products_FrontEnd"
        - sh tests/drone/setup-stages.sh "Notices"                      "38-Notices"
        # - sh tests/drone/setup-stages.sh "OrderBackendProductAttribute" "39-OrderBackendProductAttribute"
        - sh tests/drone/setup-stages.sh "Product_Attribute"            "40-Product_Attribute"
        - sh tests/drone/setup-stages.sh "Quotation_FrontEnd"           "41-Quotation_FrontEnd"
        - sh tests/drone/setup-stages.sh "Discounts"                    "42-Discounts"
        - sh tests/drone/setup-stages.sh "Order_Checkout"               "43-Order_Checkout"
        - sh tests/drone/setup-stages.sh "One_Steps_Checkout"           "44-One_Steps_Checkout"

    23-Tax_Rate:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=23-Tax_Rate
        - tests_db=Tax_Rate
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-23-Tax_Rate
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Products/Tax_Rate 0 0'

    24-Wrapper:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=24-Wrapper
        - tests_db=Wrapper
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-24-Wrapper
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Shippings/Wrapper 0 0'

    25-Shipping:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=25-Shipping
        - tests_db=Shipping
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-25-Shipping
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Shippings/Shipping 0 0'

    26-Stockroom:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=26-Stockroom
        - tests_db=Stockroom
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-26-Stockroom
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Stockrooms/StockRoom 0 0'

    27-Stock_Image:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=27-Stock_Image
        - tests_db=Stock_Image
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-27-Stock_Image
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g1/Stockrooms/Stock_Image 0 0'

    28-User:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=28-User
        - tests_db=User
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-28-User
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Users/User 0 0'

    29-Shopper_Group:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=29-Shopper_Group
        - tests_db=Shopper_Group
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-29-Shopper_Group
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Users/Shopper_Group 0 0'

    30-Checkout_Quantity:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=30-Checkout_Quantity
        - tests_db=Checkout_Quantity
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-30-Checkout_Quantity
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Checkout_Quantity 0 0'

    31-ProductManagement:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=31-ProductManagement
        - tests_db=ProductManagement
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-31-ProductManagement
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Products/ProductManagement 0 0'

    32-Compare_Products:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=32-Compare_Products
        - tests_db=Compare_Products
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-32-Compare_Products
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Compare_Products 0 0'
    33-Manufacturer:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=33-Manufacturer
        - tests_db=Manufacturer
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-33-Manufacturer
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/Products/Manufacturer 0 0'

    34-VAT:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=34-VAT
        - tests_db=VAT
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-34-VAT
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/VAT 0 0'

#    35-Stockroom_Checkout:
#        group: 02-tests
#        image: redwebaps/testbox-chromedriver:2.38
#        environment:
#        - tests_user=admin
#        - tests_suite=35-Stockroom_Checkout
#        - tests_db=Stockroom_Checkout
#        - build_path=/drone/src/github.com/${DRONE_REPO}
#        - output_append=-35-Stockroom_Checkout
#        commands:
#        # Regular entry point
#        - /entrypoint.sh &
#        # Performs test after ensuring that the scenario has been fully set up
#        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
#        # Performs test
#        - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Stockroom 0 0'

    36-Shopper_Groups_Checkout:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=36-Shopper_Groups_Checkout
        - tests_db=Shopper_Groups_Checkout
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-36-Shopper_Groups_Checkout
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Shopper_Groups 0 0'

#    37-Products_FrontEnd:
#        group: 02-tests
#        image: redwebaps/testbox-chromedriver:2.38
#        environment:
#        - tests_user=admin
#        - tests_suite=37-Products_FrontEnd
#        - tests_db=Products_FrontEnd
#        - build_path=/drone/src/github.com/${DRONE_REPO}
#        - output_append=-37-Products_FrontEnd
#        commands:
#        # Regular entry point
#        - /entrypoint.sh &
#        # Performs test after ensuring that the scenario has been fully set up
#        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
#        # Performs test
#        - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Products 0 0'

    38-Notices:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=38-Notices
        - tests_db=Notices
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-38-Notices
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run  acceptance/administrator/g1/Notices 0 0'

#    39-OrderBackendProductAttribute:
#        group: 02-tests
#        image: redwebaps/testbox-chromedriver:2.38
#        environment:
#        - tests_user=admin
#        - tests_suite=39-OrderBackendProductAttribute
#        - tests_db=OrderBackendProductAttribute
#        - build_path=/drone/src/github.com/${DRONE_REPO}
#        - output_append=-39-OrderBackendProductAttribute
#        commands:
#        # Regular entry point
#        - /entrypoint.sh &
#        # Performs test after ensuring that the scenario has been fully set up
#        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
#        # Performs test
#        - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g2/OrderBackendProductAttribute 0 0'

    40-Product_Attribute:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=40-Product_Attribute
        - tests_db=Product_Attribute
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-40-Product_Attribute
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Product_Attribute 0 0'

    41-Quotation_FrontEnd:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=41-Quotation_FrontEnd
        - tests_db=Quotation_FrontEnd
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-41-Quotation_FrontEnd
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Quotations 0 0'

    42-Discounts:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=42-Discounts
        - tests_db=Discounts
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-42-Discounts
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Discounts 0 0'

    43-Order_Checkout:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=43-Order_Checkout
        - tests_db=Order_Checkout
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-43-Order_Checkout
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/Order 0 0'

    44-One_Steps_Checkout:
        group: 02-tests
        image: redwebaps/testbox-chromedriver:2.38
        environment:
        - tests_user=admin
        - tests_suite=44-One_Steps_Checkout
        - tests_db=One_Steps_Checkout
        - build_path=/drone/src/github.com/${DRONE_REPO}
        - output_append=-44-One_Steps_Checkout
        commands:
        # Regular entry point
        - /entrypoint.sh &
        # Performs test after ensuring that the scenario has been fully set up
        - while [ ! -f tests/.cache.setup.$tests_suite.tmp ]; do sleep 1; done
        # Performs test
        - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/One_Steps_Checkout 0 0'

    slack:
        image: plugins/slack
        webhook: https://hooks.slack.com/services/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
        channel: redshop-builds
        when:
            status: [ success, failure ]
        template: >
            {{#success build.status}}
              {{repo.name}} PR #{{build.pull}} succeeded in {{since build.started}}. Good job {{build.author}}!  Here is the build log: {{build.link}}.  Link to the PR: https://github.com/{{repo.owner}}/{{repo.name}}/pull/{{build.pull}}
            {{else}}
              {{repo.name}} PR #{{build.pull}} failed in {{since build.started}}. Fix me please {{build.author}}!  Here is the build log: {{build.link}}.  Link to the PR: https://github.com/{{repo.owner}}/{{repo.name}}/pull/{{build.pull}}
            {{/success}}

    error-report:
        image: redwebaps/testbox-chromedriver:2.38
        commands:
        - if [ -z "${CI_PULL_REQUEST}" ]; then export CI_PULL_REQUEST=1; fi
        - vendor/bin/robo send:build-report-error-slack redcomponent 365447364384436 Q94UM5kjZkZIrau8MIL93m0dN6U "$CI_REPO" "$CI_PULL_REQUEST" "https://hooks.slack.com/services/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" "#redshop-builds" "$CI_BUILD_URL"
        when:
            status: [ failure ]

services:
    db:
        image: mysql/mysql-server:5.7
        # pull: true
        environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_ROOT_HOST=%

    php:
        image: redwebaps/php-apache:7.1
        # pull: true
        environment:
        - WEB_DOCUMENT_ROOT=/drone/src/github.com/${DRONE_REPO}
        - JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK=1

branches:
    exclude: [ crowdin ]
