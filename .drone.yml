clone:
    default:
        image: plugins/git
        recursive: false

pipeline:
    00-cache:
        group: 00-setup
        image: redwebaps/redshop-cache:latest
        pull: true
        commands:
            # redSHOP Composer cache
            - mv /opt/cache/redSHOP/vendor .
            - touch tests/.cache.composer.tmp
            # redSHOP Composer cache for libraries
            - mv /opt/cache/redSHOP/libraries/redshop/vendor libraries/redshop
            - touch tests/.cache.libraries.redshop.composer.tmp
            # redSHOP Composer cache for redshopb_pdf plugin
            - mv /opt/cache/redSHOP/plugins/redshop_pdf/tcpdf/helper/vendor plugins/redshop_pdf/tcpdf/helper
            - touch tests/.cache.plugins.redshop_pdf.composer.tmp
            # redSHOP npm cache
            - mv /opt/cache/redSHOP/node_modules .
            - touch tests/.cache.npm.tmp
            # Joomla CMS
            # - mv /opt/cache/joomla-cms tests
            # - touch tests/.cache.joomla-cms.tmp

    00-setup:
        group: 00-setup
        image: redwebaps/testbox-chromedriver:79.0-n12
        pull: true
        commands:
            # Composer setup
            - while [ ! -f tests/.cache.composer.tmp ]; do sleep 1; done                        # Comment if not using composer cache
            # - composer config --global --auth github-oauth.github.com 4281d0ba7e8f1caded4c8b949a1c115902e30113
            # - composer install --prefer-dist                                                  # Uncomment if not using composer cache
            # - while [ ! -f tests/.cache.libraries.redshop.composer.tmp ]; do sleep 1; done      # Comment if not using composer cache for libraries
            # - composer install --prefer-dist -d libraries/redshop                             # Uncomment if not using composer cache for libraries
            # - while [ ! -f tests/.cache.plugins.redshop_pdf.composer.tmp ]; do sleep 1; done    # Comment if not using composer cache for redshopb_pdf plugin
            # - composer install --prefer-dist -d plugins/redshop_pdf/tcpdf/helper              # Uncomment if not using composer cache for redshopb_pdf plugin

            # npm setup
            - while [ ! -f tests/.cache.npm.tmp ]; do sleep 1; done                             # Comment if not using npm cache
            - npm install --save-dev
            - npm rebuild node-sass

            # - npm install gulp                                                                # Uncomment if not using npm cache
            - npm audit fix
            - composer config -g repo.packagist composer https?://packagist.jp
            - mv gulp-config.json.dist gulp-config.json
            - gulp composer
            - gulp release --skip-version

            # clone Paid Extensions
            - vendor/bin/robo tests:paid-extensions-for-integration-tests
            - cd tests/extension/paid-extensions
            - mv gulp-config.sample.json gulp-config.json
            - npm install --save-dev
            - gulp composer
            - gulp release --skip-version
            - cd ../../..

            # Codeception setup
            - cp tests/acceptance.suite.yml.dist.drone tests/acceptance.suite.yml
            # Test setup
            # - while [ ! -f tests/.cache.joomla-cms.tmp ]; do sleep 1; done                      # Comment if not using Joomla CMS cache
            - vendor/bin/robo tests:site-preparation 0 0
            # Ownership for uid 82
            - chown -R www-data:www-data .
            # Touching temp file to start the setup of each installation (in each PHP version - via services)
            - touch tests/.setup.tmp

    00-setup-73:
        group: 00-setup
        image: redwebaps/testbox-chromedriver:79.0-n12
        pull: true
        environment:
            - tests_user=admin
            - tests_suite=00-setup
            - tests_db=setup
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-00-setup
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &

            # Waiting for setup to be done
            - while [ ! -f tests/.setup.tmp ]; do sleep 1; done

            # Creating first clone for tests setup
            - mkdir -p tests/$tests_suite$php_version/joomla-cms
            - rsync -a tests/joomla-cms/ tests/$tests_suite$php_version/joomla-cms
            # Creates the database (required because of the Codeception Db module)
            - mysql -u root -proot -h db -e "CREATE DATABASE $tests_db$php_version"
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs the setup and installation routine
            - su www-data -c 'vendor/bin/robo tests:setup 0 0'
            # Touching temp file to start the environment cloning (see setup-stages service)
            - touch tests/.setup$php_version.tmp

    01-Group1:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=01-Group1
            - tests_db=group1
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-01-Group1
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g15/Products/Manufacturer 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g01 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g02 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g03 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g04 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g13 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/uninstall 0 0'

    02-Group2:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=02-Group2
            - tests_db=group2
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-02-Group2
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g15/Missing 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g02 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g03 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g05 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g06 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g08 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g10 0 0'

    03-Group3:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=03-Group3
            - tests_db=group3
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-03-Group3
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g15/Product_Price 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g05 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g07 0 0'

    04-Group4:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=04-Group4
            - tests_db=group4
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-04-Group4
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/Oder_Backend 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g08 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g10 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g11 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g06 0 0'

    05-Group5:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=05-Group5
            - tests_db=group5
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-05-Group5
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g09 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g11 0 0'

    06-Group6:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=06-Group6
            - tests_db=group6
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-06-Group6
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g13 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g15/Wishlist 0 0'

    07-Group7:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=07-Group7
            - tests_db=group7
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-07-Group7
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g15/Products/Category 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g16 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g14 0 0'

    08-Group8:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=08-Group8
            - tests_db=group8
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-08-Group8
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g16 0 0'

    09-Group9:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=09-Group9
            - tests_db=group9
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-09-Group9
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g12 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/administrator/g17 0 0'

    10-Group10:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=10-Group10
            - tests_db=group10
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-10-Group10
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g17/Plugins/Shipping 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g15/OneStepCheckout 0 0'

    11-Group11:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=11-Group11
            - tests_db=group11
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-11-Group11
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g17/Module 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g17/Category 0 0'

    12-Group12:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=12-Group12
            - tests_db=group12
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-12-Group12
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g17/Plugins/payment 0 0'

    13-Group13:
        group: 01-tests
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_user=admin
            - tests_suite=13-Group13
            - tests_db=group13
            - build_path=/drone/src/github.com/${DRONE_REPO}
            - output_append=-13-Group13
            - php_version=73
        commands:
            # Regular entry point
            - /entrypoint.sh &
            # Performs test after ensuring that the scenario has been fully set up
            - while [ ! -f tests/.cache.setup.$tests_suite$php_version.tmp ]; do sleep 1; done
            # Waits until Chromedriver is up and running
            - while ! nc -z localhost 9515; do sleep 1; done
            # Performs test
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g15/Ajax 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g07 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g15/TermsCondition 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/integration/g04 0 0'
            - su www-data -c 'vendor/bin/robo tests:run acceptance/install/extension 0 0'

services:
    db:
        image: mysql/mysql-server:5.7
        pull: true
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_ROOT_HOST=%

    php73:
        image: redwebaps/php-apache:7.3
        pull: true
        environment:
            - WEB_DOCUMENT_ROOT=/drone/src/github.com/${DRONE_REPO}
            - JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK=1

    setup-stages:
        image: redwebaps/testbox-chromedriver:79.0-n12
        environment:
            - tests_suite=00-setup
            - tests_db=setup
            - php_versions=73
        commands:
            # Base installation
            - sh tests/drone/setup-base-install.sh  $tests_db                              $tests_suite                 $php_versions
            # Stages setup
            - sh tests/drone/setup-stages.sh        "group1"                               "01-Group1"                  $php_versions
            - sh tests/drone/setup-stages.sh        "group2"                               "02-Group2"                  $php_versions
            - sh tests/drone/setup-stages.sh        "group3"                               "03-Group3"                  $php_versions
            - sh tests/drone/setup-stages.sh        "group4"                               "04-Group4"                  $php_versions
            - sh tests/drone/setup-stages.sh        "group5"                               "05-Group5"                  $php_versions
            - sh tests/drone/setup-stages.sh        "group6"                               "06-Group6"                  $php_versions
            - sh tests/drone/setup-stages.sh        "group7"                               "07-Group7"                  $php_versions
            - sh tests/drone/setup-stages.sh        "group8"                               "08-Group8"                  $php_versions
            - sh tests/drone/setup-stages.sh        "group9"                               "09-Group9"                  $php_versions
            - sh tests/drone/setup-stages.sh        "group10"                              "10-Group10"                 $php_versions
            - sh tests/drone/setup-stages.sh        "group11"                              "11-Group11"                 $php_versions
            - sh tests/drone/setup-stages.sh        "group12"                              "12-Group12"                 $php_versions
            - sh tests/drone/setup-stages.sh        "group13"                              "13-Group13"                 $php_versions

branches:
    exclude: [ crowdin ]
