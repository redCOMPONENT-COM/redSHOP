<?xml version="1.0" encoding="UTF-8"?>
<!-- ==================================================================  -->
<!-- redSHOP packager                                                    -->
<!-- This PHING build file generates the redSHOP Plugins package         -->
<!-- To use in your environment do the following steps:                  -->
<!--    Change the following variables in build.properties file          -->
<!--            (copy variables from build.properties.dist )             -->
<!--    - change the version in variable comp.version                    -->
<!--    - change the package folder path in variable package.dir         -->
<!--    - execute this PHING build file                                  -->
<!--                                                                     -->
<!-- Important note: remind first to update all the GIT submodules       -->
<!-- otherwise plugins like the MVCoverride will not be packaged         -->
<!-- ==================================================================  -->

<project name="plugins_packager" basedir="." default="pack">
    <!-- ============================================  -->
    <!-- Create packages folder                        -->
    <!-- ============================================  -->
    <target name="prepare">
        <if>
            <not>
                <isset property="package.dir" />
            </not>
            <then>
                <fail msg="package.dir not specified, specify package.dir in build.properties file" />
            </then>
        </if>

        <!-- Folder where the redSHOP repository is located  -->
        <property
                name="extpath"
                value="."
                override="true"/>

        <xmlproperty file="${extpath}/${extension}.xml" prefix="extensionDetails" keepRoot="false" />

        <property
                name="version"
                value="${extensionDetails.version}"
                override="true"/>

        <!-- Temp dir to create packages -->
        <property
                name="tmpdir"
                value=".tmp"
                override="true"/>

        <!-- Check if the temp folder exists. If not, create it -->
        <if>
            <available file="${tmpdir}" type="dir"/>
            <then>
                <echo msg="Removing old ${tmpdir}"/>
                <delete dir="${tmpdir}"/>
            </then>
        </if>
        <echo msg="Making directory to store the temporary packages at ${tmpdir}"/>
        <mkdir dir="${tmpdir}"/>
    </target>

    <!-- ============================================  -->
    <!-- Target: build                                 -->
    <!-- ============================================  -->
    <!-- Loops through folders creating plugins packages -->

    <target name="build" depends="prepare">
        <!-- Loop through plugins groups -->
        <foreach param="group_name" target="plugin_loop">
            <fileset dir="${extpath}/plugins">
                <type type="dir" />
                <depth max="0" min="0" />
            </fileset>
        </foreach>

        <if>
            <available file="${package.dir}/${extension}-${version}-plugins" type="dir" />
            <then>
                <delete dir="${package.dir}/${extension}-${version}-plugins"/>
            </then>
        </if>

        <copy todir="${package.dir}/${extension}-${version}-plugins">
            <fileset dir="${tmpdir}">
                <include name="**" />
            </fileset>
        </copy>
    </target>

    <target name="plugin_loop" description="Loops through plugins folders inside groups">
        <mkdir dir="${tmpdir}/${group_name}" />

        <!-- Loop through plugins -->
        <foreach param="plugin_name" target="plugin_packager">
            <fileset dir="${extpath}/plugins/${group_name}">
                <type type="dir" />
                <depth max="0" min="0" />
                <exclude name="dompdf/**" />
                <exclude name="mpdf/**" />
            </fileset>
        </foreach>
    </target>

    <target name="plugin_packager" description="Packages the extension for delivery">
        <xmlproperty file="${extpath}/plugins/${group_name}/${plugin_name}/${plugin_name}.xml" prefix="pluginmanifest" keepRoot="false" />
        <property
                name="plugin_version"
                value="${pluginmanifest.version}"
                override="true"/>
        <!-- Todo: the following code checks compatibility with redSHOP Core version. The code works, but it can be improved with some PHING knowledge -->
        <property
                name="redshop_compatibility"
                value="${pluginmanifest.redshop}"
                override="true"/>

        <if>
            <contains string="${redshop_compatibility}" substring="pluginmanifest.redshop" />
            <then>
                <property
                        name="redshop_compatibility"
                        value=""
                        override="true"/>
            </then>
            <else>
                <property
                        name="redshop_compatibility"
                        value="_for_redSHOP${redshop_compatibility}"
                        override="true"/>
            </else>
        </if>

        <zip
                destfile="${tmpdir}/${group_name}/${group_name}_${plugin_name}_${plugin_version}${redshop_compatibility}.zip"
                basedir="${extpath}/plugins/${group_name}/${plugin_name}">
            <fileset dir="${extpath}/plugins/${group_name}/${plugin_name}">
                <include name="**" />
                <exclude name=".*" />
            </fileset>
        </zip>
    </target>

    <target name="clean-tmp">
        <delete dir="${tmpdir}"/>
    </target>

    <target name="compress-clean" depends="clean-tmp">
        <!-- needed for external cleaning and compressing -->
    </target>

    <target name="dist" depends="build, compress-clean">
        <echo msg="Modules build successful!"/>
    </target>

    <target name="pack">
        <!-- Do initialization stuff -->
        <if>
            <not>
                <available file="build.properties" type="file" />
            </not>
            <then>
                <fail msg="File not found: build.properties" />
            </then>
        </if>

        <property file="build.properties" override="true"/>

        <property
                name="extension"
                value="${comp.name}"
                override="true"/>

        <phingcall target="dist" />
    </target>

    <target name="autopack">
        <property
                name="package.dir"
                value=".dist"
                override="true"/>

        <property
                name="extension"
                value="redshop"
                override="true"/>

        <property
                name="joomla.version"
                value="j3_and_j25"
                override="true"/>

        <property
                name="package.delete"
                value="true"
                override="false"/>

        <if>
            <and>
                <available file="${package.dir}" type="dir"/>
                <equals arg1="${package.delete}" arg2="1" />
            </and>
            <then>
                <echo msg="Removing old autopack folder"/>
                <delete dir="${package.dir}"/>
            </then>
        </if>

        <phingcall target="dist" />
    </target>
</project>
